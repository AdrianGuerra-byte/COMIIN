---
// Programa académico del evento
interface ScheduleEvent {
  time: string;
  period: "AM" | "PM";
  title: string;
  speaker: string;
  location: string;
}

interface ProgramDay {
  id: string;
  label: string;
  events: ScheduleEvent[];
}

const programDays: ProgramDay[] = [
  {
    id: "day1",
    label: "Día 1 - Conferencias",
    events: [
      {
        time: "09:00",
        period: "AM",
        title: "Registro y Acreditación",
        speaker: "Comité Organizador",
        location: "Edificio Principal CUH",
      },
      {
        time: "10:00",
        period: "AM",
        title: "Ceremonia de Inauguración",
        speaker: "Director General CUH y Comité Organizador",
        location: "Edificio Principal CUH",
      },
      {
        time: "11:30",
        period: "AM",
        title: "Conferencia Magistral: Innovación Educativa",
        speaker: "Mtra. Maria Isabel Jarillo - Universidad CUH",
        location: "Usos Multiples, 3er Piso Edificio Principal CUH",
      },
    ],
  },
  {
    id: "day2",
    label: "Día 2 - Talleres",
    events: [
      {
        time: "09:00",
        period: "AM",
        title: "Taller: Metodologías Activas",
        speaker: "Dr. Javier Martínez - CUH",
        location: "Aula 201",
      },
      {
        time: "11:00",
        period: "AM",
        title: "Taller: Investigación Cuantitativa",
        speaker: "Dra. Laura Sánchez - UNAM",
        location: "Aula 203",
      },
    ],
  },
  {
    id: "day3",
    label: "Día 3 - Conclusiones",
    events: [
      {
        time: "10:00",
        period: "AM",
        title: "Panel de Conclusiones",
        speaker: "Comité Académico",
        location: "Auditorio Principal",
      },
      {
        time: "12:00",
        period: "PM",
        title: "Ceremonia de Clausura",
        speaker: "Autoridades CUH",
        location: "Auditorio Principal",
      },
    ],
  },
];
---

<section class="programa-section" id="programa">
  <div class="programa-container">
    <header class="programa-header">
      <h2>Programa Académico</h2>
      <p>
        Descubre todas las actividades, conferencias y talleres planeados para
        esta experiencia académica
      </p>
    </header>

    <nav class="programa-tabs" role="tablist" aria-label="Días del programa">
      {
        programDays.map((day, index) => (
          <button
            class:list={["tab-button", { active: index === 0 }]}
            role="tab"
            aria-selected={index === 0}
            aria-controls={`panel-${day.id}`}
            data-day={day.id}
          >
            {day.label}
          </button>
        ))
      }
    </nav>

    <div class="programa-content">
      {
        programDays.map((day, index) => (
          <article
            class:list={["day-panel", { active: index === 0 }]}
            id={`panel-${day.id}`}
            role="tabpanel"
            aria-labelledby={day.id}
          >
            <div class="schedule-timeline">
              {day.events.map((event) => (
                <div class="schedule-item">
                  <div class="event-time">
                    <time datetime={`${event.time}:00`}>
                      <span class="time-number">{event.time}</span>
                      <span class="time-period">{event.period}</span>
                    </time>
                  </div>
                  <div class="event-card">
                    <h3 class="event-title">{event.title}</h3>
                    <p class="event-speaker">
                      <i class="fas fa-user" />
                      {event.speaker}
                    </p>
                    <p class="event-location">
                      <i class="fas fa-map-marker-alt" />
                      {event.location}
                    </p>
                  </div>
                </div>
              ))}
            </div>
          </article>
        ))
      }
    </div>
  </div>
</section>

<script>
  function initProgramaTabs() {
    const tabButtons = document.querySelectorAll(".tab-button");
    const panels = document.querySelectorAll(".day-panel");

    if (!tabButtons.length || !panels.length) return;

    const switchTab = (selectedButton: Element) => {
      const targetDay = selectedButton.getAttribute("data-day");
      if (!targetDay) return;

      // Actualizar botones
      tabButtons.forEach((btn) => {
        const isSelected = btn === selectedButton;
        btn.classList.toggle("active", isSelected);
        btn.setAttribute("aria-selected", String(isSelected));
      });

      // Actualizar paneles
      panels.forEach((panel) => {
        const panelId = panel.getAttribute("id");
        const isActive = panelId === `panel-${targetDay}`;
        panel.classList.toggle("active", isActive);
      });
    };

    // Event listeners
    tabButtons.forEach((button) => {
      button.addEventListener("click", () => switchTab(button));
    });

    // Soporte de teclado
    tabButtons.forEach((button, index) => {
      button.addEventListener("keydown", (e: Event) => {
        const keyEvent = e as KeyboardEvent;

        if (keyEvent.key === "ArrowRight") {
          e.preventDefault();
          const nextIndex = (index + 1) % tabButtons.length;
          (tabButtons[nextIndex] as HTMLElement).focus();
          switchTab(tabButtons[nextIndex]);
        }
        if (keyEvent.key === "ArrowLeft") {
          e.preventDefault();
          const prevIndex = (index - 1 + tabButtons.length) % tabButtons.length;
          (tabButtons[prevIndex] as HTMLElement).focus();
          switchTab(tabButtons[prevIndex]);
        }
      });
    });
  }

  // Inicializar en carga y navegaciones
  document.addEventListener("DOMContentLoaded", initProgramaTabs);
  document.addEventListener("astro:page-load", initProgramaTabs);
</script>

<style>
  .programa-section {
    padding: 3.5rem 2rem;
    background: linear-gradient(180deg, #dee2e6 0%, var(--white) 100%);
  }

  .programa-container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .programa-header {
    text-align: center;
    margin-bottom: 2.5rem;
  }

  .programa-header h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 0.5rem;
    position: relative;
    display: inline-block;
    padding-bottom: 1rem;
  }

  .programa-header h2::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: linear-gradient(
      90deg,
      var(--primary-color),
      var(--secondary-color)
    );
    border-radius: 2px;
  }

  .programa-header p {
    color: var(--text-light);
    font-size: 1rem;
    margin-top: 0.75rem;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
  }

  /* Tabs */
  .programa-tabs {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2.5rem;
    flex-wrap: wrap;
  }

  .tab-button {
    padding: 0.75rem 1.75rem;
    background: var(--white);
    border: 2px solid rgba(1, 51, 103, 0.2);
    border-radius: 50px;
    color: var(--text-color);
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition);
  }

  .tab-button:hover {
    border-color: var(--primary-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(1, 51, 103, 0.15);
  }

  .tab-button.active {
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--secondary-color)
    );
    color: var(--white);
    border-color: transparent;
    box-shadow: 0 4px 15px rgba(1, 51, 103, 0.3);
  }

  /* Content */
  .programa-content {
    position: relative;
  }

  .day-panel {
    display: none;
    animation: fadeInUp 0.4s ease-out;
  }

  .day-panel.active {
    display: block;
  }

  .schedule-timeline {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  .schedule-item {
    display: grid;
    grid-template-columns: 110px 1fr;
    gap: 1.5rem;
    align-items: start;
  }

  /* Time */
  .event-time {
    position: sticky;
    top: calc(var(--navbar-height) + 1.5rem);
  }

  .event-time time {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--secondary-color)
    );
    color: var(--white);
    border-radius: 12px;
    padding: 1rem 0.75rem;
    box-shadow: var(--box-shadow);
  }

  .time-number {
    font-size: 1.35rem;
    font-weight: 700;
    line-height: 1;
    margin-bottom: 0.25rem;
  }

  .time-period {
    font-size: 0.8rem;
    font-weight: 500;
    opacity: 0.9;
  }

  /* Event Card */
  .event-card {
    background: var(--white);
    border: 1px solid rgba(1, 51, 103, 0.1);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: var(--box-shadow);
    transition: var(--transition);
    position: relative;
  }

  .event-card::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: linear-gradient(
      180deg,
      var(--primary-color),
      var(--secondary-color)
    );
    border-radius: 12px 0 0 12px;
  }

  .event-card:hover {
    transform: translateX(6px);
    box-shadow: var(--box-shadow-lg);
    border-color: rgba(1, 51, 103, 0.2);
  }

  .event-title {
    color: var(--primary-color);
    font-size: 1.2rem;
    font-weight: 700;
    margin-bottom: 0.875rem;
    line-height: 1.4;
  }

  .event-speaker,
  .event-location {
    display: flex;
    align-items: center;
    gap: 0.65rem;
    color: var(--text-light);
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
    line-height: 1.5;
  }

  .event-speaker i,
  .event-location i {
    color: var(--secondary-color);
    font-size: 0.95rem;
    width: 18px;
    text-align: center;
    flex-shrink: 0;
  }

  .event-location {
    margin-bottom: 0;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .programa-section {
      padding: 3rem 1rem;
    }

    .programa-header h2 {
      font-size: 2rem;
    }

    .programa-header p {
      font-size: 1rem;
    }

    .programa-tabs {
      flex-direction: column;
      gap: 0.75rem;
    }

    .tab-button {
      width: 100%;
      padding: 0.75rem 1.5rem;
    }

    .schedule-item {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .event-time {
      position: static;
    }

    .event-time time {
      flex-direction: row;
      gap: 0.5rem;
      padding: 0.75rem 1rem;
    }

    .time-number {
      font-size: 1.25rem;
      margin-bottom: 0;
    }

    .event-card {
      padding: 1.25rem;
    }

    .event-title {
      font-size: 1.1rem;
    }

    .event-speaker,
    .event-location {
      font-size: 0.875rem;
    }
  }

  /* Animación */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .day-panel,
    .event-card,
    .tab-button {
      animation: none;
      transition: none;
    }
  }
</style>
