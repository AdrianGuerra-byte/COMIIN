---
// Hero con carrusel de fondo
interface Props {
  title?: string;
  subtitle?: string;
  ctaText?: string;
  ctaLink?: string;
  images?: string[];
  imageAlts?: string[]; 
}

const {
  title = "Segundo Congreso CUH - COMIIN 2026",
  subtitle = "El evento académico más importante del año...",
  ctaText = "Más información",
  ctaLink = "#informacion",
  images = [
    "https://images.unsplash.com/photo-1540575467063-178a50c2df87?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80",
    "https://images.unsplash.com/photo-1523580494863-6f3031224c94?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80",
    "https://images.unsplash.com/photo-1475721027785-f74eccf877e2?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80"
  ],
  imageAlts = [
    "Conferencia inaugural en el auditorio",
    "Estudiantes participando en un taller",
    "Networking en el congreso COMIIN"
  ]
} = Astro.props;
---

<section class="hero">
  <div class="hero-carousel">
    {images.map((image, index) => (
      <div 
        class:list={["hero-slide", { active: index === 0 }]} 
      >
        <img 
          src={image} 
          alt={imageAlts[index] || 'Fondo decorativo del congreso'}
          loading={index === 0 ? 'eager' : 'lazy'}
        />
      </div>
    ))}
  </div>
  
  <div class="hero-content">
    <h1>{title}</h1>
    <p>{subtitle}</p>
    <a href={ctaLink} class="cta-button">{ctaText}</a>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const hero = document.querySelector('.hero');
    const slides = hero?.querySelectorAll('.hero-slide');
    
    if (!slides || slides.length <= 1) return; // No hay carrusel
    
    let currentSlide = 0;
    let carouselInterval;

    // MEJORA: Respetar preferencias de accesibilidad
    const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');

    function changeSlide() {
      // Más eficiente: solo quita 'active' del slide actual
      slides[currentSlide].classList.remove('active');
      currentSlide = (currentSlide + 1) % slides.length;
      slides[currentSlide].classList.add('active');
    }

    function startCarousel() {
      // No iniciar si el usuario no quiere movimiento
      if (motionQuery.matches) return;
      
      stopCarousel(); // Limpiar por si acaso
      carouselInterval = setInterval(changeSlide, 5000);
    }

    function stopCarousel() {
      clearInterval(carouselInterval);
    }
    // Iniciar
    startCarousel();
    motionQuery.addEventListener('change', () => {
      if (motionQuery.matches) {
        stopCarousel();
      } else {
        startCarousel();
      }
    });
  });
</script>

<style>
  .hero {
    position: relative;
    height: 100vh;
    min-height: 500px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    color: var(--white);
    background-color: #1a1a1a;
  }

  .hero-carousel {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .hero-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1.2s ease-in-out;
    background-color: #1a1a1a; /* Fondo mientras carga la img */
  }

  .hero-slide.active {
    opacity: 1;
    z-index: 2;
  }
  
  /* MEJORA: Estilos para el <img> en lugar de background-image */
  .hero-slide img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Reemplaza a background-size: cover */
    object-position: center;
    
    /* Efecto "Ken Burns" sutil */
    transform: scale(1.1); /* Inicia con zoom */
    transition: transform 3s ease-out; /* Transición larga para el zoom */
  }

  /* MEJORA: Activa el zoom-out solo en el slide activo */
  .hero-slide.active img {
    transform: scale(1); /* Termina sin zoom */
  }

  /* Overlay para contraste (igual que antes) */
  .hero-slide::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
    z-index: 3; /* Encima de la imagen */
  }

  .hero-content {
    position: relative;
    z-index: 4; /* Encima de todo */
    max-width: 800px;
    padding: 0 2rem;
    animation: fadeInUp 1s ease-out;
  }

  .hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }

  .hero p {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
  }

  .cta-button {
    background-color: var(--white);
    color: var(--primary-color);
    border: none;
    padding: 12px 30px;
    font-size: 1.1rem;
    font-weight: 500;
    border-radius: 50px;
    cursor: pointer;
    transition: var(--transition);
    box-shadow: var(--box-shadow);
    position: relative;
    overflow: hidden;
    text-decoration: none;
    display: inline-block;
  }

  .cta-button:hover {
    background-color: rgba(255, 255, 255, 0.9);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .cta-button:focus {
    outline: 3px solid var(--accent-color);
    outline-offset: 2px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero {
      height: 100vh;
      min-height: 400px;
    }
    
    .hero h1 {
      font-size: 2.2rem;
      line-height: 1.3;
    }
    
    .hero p {
      font-size: 1.1rem;
    }
  }

  /* MEJORA: Detener animación si el usuario lo prefiere */
  @media (prefers-reduced-motion: reduce) {
    .hero-slide img,
    .hero-slide.active img {
      animation: none;
      transform: scale(1); /* Sin zoom */
    }
    
    .hero-content {
      animation: none;
    }
    }

  @media (max-width: 480px) {
    .hero {
      height: 100vh;
      min-height: 350px;
    }
    
    .hero h1 {
      font-size: 1.8rem;
    }
    
    .hero p {
      font-size: 1rem;
    }
    
    .hero-content {
      padding: 0 1rem;
    }
  }
</style>
